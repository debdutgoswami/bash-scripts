#!/bin/bash

reverse(){
    # Function not used anymore, got replaced by faster algorithm

    # Accepts a string as input
    # Returns the reverse of the input string

    input=$1
    len=${#input}
    for (( i=$len-1; i>=0; i-- ))
    do 
        reverse="$reverse${input:$i:1}"
    done
    
    echo $reverse
}

isPalind(){
    # Accepts a string as input
    # Returns 0 if the input string is a palindrome, 1 otherwise

    stringInput=$1
   # returnedFromReverse=$(reverse $stringInput)
   # if [ $returnedFromReverse != $stringInput ];
   # then
   #     return 1
   # else
   #     return 0     
   # fi

    len=${#stringInput}
    for (( i=0; i<len/2; i++ ))
    do 
        if [ ${stringInput:$i:1} != ${stringInput:$((len-1-i)):1} ]; then
            return 1
        fi
    done

    return 0
    
}

feed(){
    # Accepts a file as input
    # Returns nothing
    # Sends each of the words to isPalind(), and if the word is a palindrome, it is added to the output file.

    file=$1
    if [ -f $file ]
    echo -e "=====\nFile: $file" >> output.palindrome
    flag=0
    then
        exec<$file
        while read line; do
            for word in $line; do
                wd=${word//;}
                wd2=${wd//.}
                isPalind $wd2
                if [[ $? -eq 0 ]];
                then
                    flag=1
                    echo -e $wd2 >> output.palindrome
                fi
            done
        done
    fi
    if [ $flag -eq 0 ]; then
        echo -e "No Palindromes in file!" >> output.palindrome
    fi
}

echo -e "Palindromes Found:" > output.palindrome

for item in $*
do
    feed $item
done